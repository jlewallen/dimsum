schema {
  query: Query
  mutation: Mutation
}

scalar Entity
scalar Reply
scalar Key

input LanguageQueryCriteria {
  text: String!
  evaluator: Key!
}

type Evaluation {
  reply: Reply!
  entities: [Entity!]
}

type Query {
  size: Int!
  world: Entity!
  entitiesByKey(key: Key): [Entity!]
  entitiesByGid(gid: Int): [Entity!]
  language(criteria: LanguageQueryCriteria!): Evaluation!
  areas: [Entity!]
  people: [Entity!]
}

scalar Token

input Credentials {
  username: String!
  password: String!
}

type EntitiesUpdated {
  affected: Int!
}

type Mutation {
  login(credentials: Credentials!): Token!
  makeSample: EntitiesUpdated
  update(entities: [Entity!]): EntitiesUpdated
  purge: EntitiesUpdated
}
