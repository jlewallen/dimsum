* DimSum
** TODO SSB Storage Backend
** TODO Distance Effects.

   N-Hops aways, etc...

** TODO Weather esp Wind

   Set logical zip code for an area, weather changes to reflect
   that. Wind can blow light items from one area to another.

** TODO Mode: Make Maze.

   Just randomly generates a maze that gets populated with stuff.

** TODO Mode: Animal Crossing

   I think that eventually this will become a thing, but the idea is
   that we can forage for supplies/resources and then use those to
   build other items, using recipes.

   .do recipe Super Cool Thing
   You're holding a recipe.
   .call this NAME

** TODO Mode: Escape Room

   Everybody is thrown into a randomly generated world and has to
   capture a flag or do something? See who can gather the most X in
   whatever time? People can also create their own scenarios, in a
   DnD-esque way and see if their friends can find their way out.

** TODO Look for <obscured_item>

   Allow some items to only be held/interacted with after being seen.

   We can use a property for this.

** TODO Optimize Persistence
   Remember which entities are modified in which Actions, only save
   those. This should also integrate with entity.touch() so we can
   perform optimistic locking or something similar.

** TODO Web tool for drawing connected areas.
** TODO Behavior Name Picker

   Present good options for b:key:verb:when

** TODO CLI mode for testing.

   This should just be a telnet server, maybe.

** DONE Lock/freeze items.

   In order to create scarcity and value for items, maybe locking them
   so they can't be cloned or modified.

   Part of this should be making something immobile, to solve moving
   entrances problem.

** DONE Entities that have to be carried.

   Water, for example.

** DONE Entities that produce others.

   I'm thinking of a water fountain that can produce water. Rock face
   that produces rocks/boulders.

** DONE Lua Customization

   Per-Behavior Hooks

   These can be on entities, for example if they're on an Item and
   that the user "shakes" that item, then we run the "b:shake" for
   that item. If the behavior is on a room then we also call the
   b:shake hook for the room.

   Verb Entities

   This would be of the form "v:shake" and define the behavior of that
   verb. In many cases these just invoke the behavior.

** DONE Time passing.

   Maybe a tick hook that fires once a minutes for everything, staggered.

** DONE Allow naming of common things that get made.
** DONE Modify credentials in game.
** DONE Toggle eating and drinking of things.
** DONE Timestamps.
** DONE Planting
** DONE Climbing
** DONE Water/Pour
** DONE Saving behaviors should compile or error.
** DONE Countable things.

   give NUMBER noun to noun

   Recipes have a kind identity. This same kind identity is used for QuantifiedItems to group them.

** DONE Pass mixin collection to Item/Entities for construction?

   They would have access to things.Item? Do we need this?

** DONE Depend on carryable for dropping worn items?

   No real benefit now. Keep the idea round, though.
